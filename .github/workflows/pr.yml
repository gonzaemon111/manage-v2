name: PR Check

env:
  TZ: "Asia/Tokyo"

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 使用するNode.jsのバージョンを定義
        node-version: [18.x]
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      DATABASE_URL: mysql://root:root@localhost:3306/manage
    services:
      db:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: manage
          MYSQL_USER: manage
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Asia/Tokyo"
          timezoneMacos: "Asia/Tokyo"

      - name: Use Node.js ${{ matrix.node-version }}
        # Node.jsのセットアップに必要な設定
        uses: actions/setup-node@v3
        with:
          # Node.jsのバージョンを指定
          node-version: ${{ matrix.node-version }}
          # yarnのキャッシュを使用する設定
          cache: "yarn"

      - name: Install dependencies
        # プロジェクトの依存関係をインストール
        run: yarn install --frozen-lockfile

      - name: Prisma Generate # これをしないとBuildが実行できない
        run: yarn prisma generate

      - name: Check Lint
        run: yarn lint

      - name: Check Test
        run: yarn test:ci

      - name: Check Build
        run: yarn build
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_GITHUB_CLIENT_ID: ${{ secrets.NEXTAUTH_GITHUB_CLIENT_ID }}
          NEXTAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.NEXTAUTH_GITHUB_CLIENT_SECRET }}
          # 一時的に挿入
          LAGRING_BASE_URL: http://localhost:3000
